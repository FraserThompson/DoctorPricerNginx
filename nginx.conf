user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include    mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush     on;
    keepalive_timeout  65;
    gzip  on;
    server_tokens off;

    proxy_connect_timeout 75s;
    proxy_read_timeout 120s;

    upstream dp_server {
        server unix:/socks/gunicorn.sock fail_timeout=10s;
    }

    server {
        listen 80 default_server;
        
        location / {
            rewrite ^ https://$host$request_uri? permanent;
        }
    }

    server {
        listen   443;
        ssl on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
        ssl_prefer_server_ciphers on;
        ssl_certificate     /etc/letsencrypt/live/api2.doctorpricer.co.nz/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api2.doctorpricer.co.nz/privkey.pem;

        server_name api2.doctorpricer.co.nz;

        client_max_body_size 20M;

        location /assets/ {
            autoindex on;
            root   /var/www/dp_server;
        }

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Credentials' 'True' always;
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS, POST, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'origin, content-type, accept, cache-control, authorization' always;

            if (!-f $request_filename) {
                proxy_pass http://dp_server;
                break;
            }
        }

        location  /favicon.ico {
            alias /var/www/dp_server/assets/favicon.ico;
        }

        location  /robots.txt {
            alias /var/www/dp_server/assets/robots.txt ;
        }

        error_page 500 502 503 504 /500.html;
        location = /500.html {
            root /var/www/dp_server/assets;
        }
    }
}